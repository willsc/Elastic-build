apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 3
  serviceName: kafka
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: caronwills/kafka-rhel-v1:latest 
          ports:
          - containerPort: 9092
          env:
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "aebf8cd20ed434e7f9a77635f45175fb-1570955932.eu-west-1.elb.amazonaws.com"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper-0.zookeeper.default.svc.cluster.local:2181,zookeeper-1.zookeeper.default.svc.cluster.local:2181,zookeeper-2.zookeeper.default.svc.cluster.local:2181
          - name: KAFKA_HEAP_OPTS
            value: -Xmx1G -Xms1G
          - name: KAFKA_CREATE_TOPICS
            value: "test-topic:3:2:compact"
          - name: KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS
            value: "600000"  
          - name: KAFKA_LOG_DIRS
            value: /kafka/kafka-logs
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_JMX_PORT
            value: "5555"
          - name: KAFKA_CLEANUP_POLICY
            value: "compact"
          volumeMounts:
            - name: logs
              mountPath: /kafka-logs
              subPath: logs
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
